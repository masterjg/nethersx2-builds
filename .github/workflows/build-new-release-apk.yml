name: Build new release APK

on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:

jobs:
  check-release:
    name: Check release
    runs-on: ubuntu-24.04
    outputs:
      latest-release: ${{ steps.get-latest-release.outputs.release }}
      is-new-release: ${{ steps.compare-releases.outputs.is-new }}
    steps:
      - name: Check out this repository
        uses: actions/checkout@v4

      - name: Get last known release
        id: get-last-known-release
        run: |
          LAST_KNOWN_RELEASE=""
          if [ -f .release_version ]; then
            LAST_KNOWN_RELEASE="$(cat .release_version)"
          fi
          echo "release=${LAST_KNOWN_RELEASE}" >> "$GITHUB_OUTPUT"

      - name: Get latest release from NetherSX2-patch repository
        id: get-latest-release
        run: |
          LATEST_RELEASE_JSON="$(curl -s https://api.github.com/repos/Trixarian/NetherSX2-patch/releases/latest)"
          LATEST_RELEASE="$(echo "$LATEST_RELEASE_JSON" | jq -r .tag_name)"
          echo "release=${LATEST_RELEASE}" >> "$GITHUB_OUTPUT"

      - name: Compare releases
        id: compare-releases
        run: |
          if [ "${{ steps.get-last-known-release.outputs.release }}" = "${{ steps.get-latest-release.outputs.release }}" ]; then
            echo "is-new=0" >> "$GITHUB_OUTPUT"
          else
            echo "is-new=1" >> "$GITHUB_OUTPUT"
          fi

  build-apk:
    name: Build APK
    needs:
      - check-release
    if: needs.check-release.outputs.is-new-release == '1'
    runs-on: ubuntu-24.04
    outputs:
      apk-name: ${{ steps.patch-aethersx2-apk.outputs.result-apk-name }}
    steps:
      - name: Check out NetherSX2-patch repository
        uses: actions/checkout@v4
        with:
          repository: Trixarian/NetherSX2-patch
          ref: ${{ needs.check-release.outputs.latest-release }}
          path: NetherSX2-patch

      - name: Install missing dependencies
        run: |
          sudo apt update
          sudo apt install -y xdelta3

      - name: Patch AetherSX2 APK
        id: patch-aethersx2-apk
        working-directory: NetherSX2-patch
        run: |
          ./patch-apk.sh
          mv *-patched.apk ../${APK_NAME}
          echo "result-apk-name=${APK_NAME}" >> "$GITHUB_OUTPUT"
        env:
          APK_NAME: nethersx2-patch-${{ needs.check-release.outputs.latest-release }}.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.patch-aethersx2-apk.outputs.result-apk-name }}
          path: ${{ steps.patch-aethersx2-apk.outputs.result-apk-name }}
          if-no-files-found: error
          compression-level: 9

  create-release:
    name: Create release
    needs:
      - build-apk
    if: ${{ needs.build-apk.result == 'success' }}
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-apk.outputs.apk-name }}

      - run: |
          ls -la

  # update-release-file:
  #   runs-on: ubuntu-24.04
  #   permissions:
  #     contents: write
  #   steps:
  #     - name: Check out this repository
  #       uses: actions/checkout@v4

  #     - name: Update stored release version
  #       run: |
  #         git config user.name "GitHub Actions"
  #         git config user.email "actions@github.com"
  #         echo "$LATEST_TAG" > .release_version
  #         git add .release_version
  #         git commit -m "Update last release tag to $LATEST_TAG"
  #         git push