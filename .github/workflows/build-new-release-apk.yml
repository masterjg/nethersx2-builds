name: Build new release APK

on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:

jobs:
  check-latest-release:
    name: Check latest release
    runs-on: ubuntu-24.04
    outputs:
      latest-release: ${{ steps.get-latest-release.outputs.release }}
      latest-release-description: ${{ steps.get-latest-release.outputs.description }}
      latest-release-url: https://github.com/Trixarian/NetherSX2-patch/releases/tag/${{ steps.get-latest-release.outputs.release }}
      is-new-release: ${{ steps.compare-releases.outputs.is-new }}
    steps:
      - name: Get last processed release
        id: get-last-processed-release
        uses: pozetroninc/github-action-get-latest-release@v0.8.0
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest release from NetherSX2-patch repository
        id: get-latest-release
        uses: pozetroninc/github-action-get-latest-release@v0.8.0
        with:
          owner: Trixarian
          repo: NetherSX2-patch

      - name: Compare releases
        id: compare-releases
        run: |
          if [ "${{ steps.get-last-processed-release.outputs.release }}" = "${{ steps.get-latest-release.outputs.release }}" ]; then
            echo "is-new=0" >> "$GITHUB_OUTPUT"
          else
            echo "is-new=1" >> "$GITHUB_OUTPUT"
          fi

  build-apk:
    name: Build APK
    needs:
      - check-latest-release
    if: needs.check-latest-release.outputs.is-new-release == '1'
    runs-on: ubuntu-24.04
    outputs:
      apk-name: ${{ steps.patch-aethersx2-apk.outputs.result-apk-name }}
    steps:
      - name: Check out NetherSX2-patch repository
        uses: actions/checkout@v4
        with:
          repository: Trixarian/NetherSX2-patch
          ref: ${{ needs.check-latest-release.outputs.latest-release }}
          path: NetherSX2-patch

      - name: Install missing dependencies
        run: |
          sudo apt update
          sudo apt install -y xdelta3

      - name: Patch AetherSX2 APK
        id: patch-aethersx2-apk
        working-directory: NetherSX2-patch
        run: |
          ./patch-apk.sh
          mv *-patched.apk ../${APK_NAME}
          echo "result-apk-name=${APK_NAME}" >> "$GITHUB_OUTPUT"
        env:
          APK_NAME: nethersx2-patch-${{ needs.check-latest-release.outputs.latest-release }}.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.patch-aethersx2-apk.outputs.result-apk-name }}
          path: ${{ steps.patch-aethersx2-apk.outputs.result-apk-name }}
          if-no-files-found: error
          compression-level: 9

  create-release:
    name: Create release
    needs:
      - check-latest-release
      - build-apk
    if: ${{ needs.build-apk.result == 'success' }}
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-apk.outputs.apk-name }}

      - name: Create release changelog
        run: |
          ORIGINAL_CHANGELOG="${{ needs.check-latest-release.outputs.latest-release-description }}"
          TRIMMED_CHANGELOG="$(echo "${ORIGINAL_CHANGELOG}" | sed '/^### This release contains the following files:/,$d')"
          echo -e "# From <${{ needs.check-latest-release.outputs.latest-release-url }}>\n\n${TRIMMED_CHANGELOG}" >> CHANGELOG.txt

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGELOG.txt
          files: ${{ needs.build-apk.outputs.apk-name }}
          tag_name: ${{ needs.check-latest-release.outputs.latest-release }}
          fail_on_unmatched_files: true
          make_latest: true
